import type React from 'react';
import RNFS from 'react-native-fs';
import Toast from 'react-native-toast-message';
import type ViewShot from 'react-native-view-shot';

export const generateWallpaper = async (
  viewShotRef: React.RefObject<ViewShot>,
  requestStoragePermission: () => Promise<boolean>,
) => {
  try {
    if (!viewShotRef.current?.capture) {
      throw new Error('ViewShot reference is not ready');
    }

    const hasPermission = await requestStoragePermission();
    if (!hasPermission) {
      return;
    }

    const uri = await viewShotRef.current.capture();
    const timestamp = Date.now();
    const fileName = `wallpaper_${timestamp}.png`;
    const destPath = `${RNFS.ExternalStorageDirectoryPath}/Pictures/${fileName}`;
    const dirPath = `${RNFS.ExternalStorageDirectoryPath}/Pictures`;
    const dirExists = await RNFS.exists(dirPath);
    if (!dirExists) {
      await RNFS.mkdir(dirPath);
    }

    await RNFS.copyFile(uri, destPath);

    Toast.show({
      type: 'success',
      text1: 'üéâ –ì–æ—Ç–æ–≤–æ!',
      text2: `–û–±–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –≥–∞–ª–µ—Ä–µ—é:\nüìÅ Pictures/WPColorApp/\nüìÑ ${fileName}`,
      visibilityTime: 5000,
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', error);
    Toast.show({
      type: 'error',
      text1: 'üòî –£–ø—Å!',
      text2: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–æ–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
      visibilityTime: 4000,
    });
  }
};
